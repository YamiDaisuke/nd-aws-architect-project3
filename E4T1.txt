

# Identify 2-3 changes that can be made to our environment to prevent an ssh brute force attack from the internet.

- Block port 22 on our instance to be restricted only from specific IPs
- Move our instance into a private subnet
- Disable SSH completely from our instance and use other mechanism of configuration using for example code deploy to upload the code into the instance and publishing the app logs into cloudwatch minimizing the use cases where someone will actually need access to the machine
- If we still need access for some really specific actions we can setup a IAM role to enable access using AWS Session manager

# Neither instance should have had access to the secret recipes bucket; even in the instance that API credentials were compromised how could we have prevented access to sensitive data?

By applying least-privileged roles to each machine blocking access to only the public bucket and restricting actions to read only. Also we should have enable server side encryption into our bucket and use KMS to pass grant access only to our instance, so even if an attacker have access to API credentials with enough permissions to read the bucket will still be unable to decrypt the content.


